name: Development Pipeline

on:
  push:
    branches: [ development ]
  pull_request:
    branches: [ development ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [weather_service, recommendation_service]
        python_version: [3.10]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Poetry dependencies
        uses: actions/cache@v2
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: | 
            ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          poetry config virtualenvs.create false

      - name: Install Dependencies
        run: | 
          cd services/${{ matrix.service }} 
          poetry install 

      - name: Lint with flake8
        run: |
          cd services/${{ matrix.service }}
          poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics

      - name: Run Tests with PyTest
        run: | 
          cd services/${{ matrix.service }}
          poetry run pytest tests/ --cov=app --cov-report=xml --cov-report=html

      - name: Upload coverage reports
        uses: actions/upload-artifact@v2
        with:
          name: coverage-reports-${{ matrix.service }}
          path: |
            services/${{ matrix.service }}/coverage.xml
            services/${{ matrix.service }}/htmlcov

  build:
    needs: test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [weather_service, recommendation_service]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Build
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker Layers
        uses: actions/cache@v2
        with:
          path: /tmp/.build-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build Docker image
        uses: docker/build-push-action@v2
        with:
          context: services/${{ matrix.service }}:dev
          push: 'false'
          tags: wearthe/${{ matrix.service }}:dev
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new
          secrets: |
            DOCKER_SCAN_SEVERITY=high

      - name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
