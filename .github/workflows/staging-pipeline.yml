name: Staging Pipeline

on:
  push:
    branches: [ staging ]

jobs:
  integration-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [weather_service, recommendation_service]
        python-version: [3.10]

    steps:
    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache Poetry dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pypoetry
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        poetry config virtualenvs.create false

    - name: Install Dependencies
      run: |
        cd services/${{ matrix.service }} 
        poetry install 

    - name: Lint with flake8
      run: |
        cd services/${{ matrix.service }}
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=140 --statistics

    - name: Run integration tests
      run: |
        cd src/${{ matrix.service }}
        pytest tests/integration/ --cov=app --cov-report=xml

  performance-test:
    runs-on: ubuntu-latest
    needs: integration-test
    steps:
    - uses: actions/checkout@v2

    - name: Install k6
      run: |
        sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys C5AD17C747E3415A3642D57D77C6C491D6AC1D69
        echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
        sudo apt-get update
        sudo apt-get install k6

    - name: Run performance tests
      run: |
        k6 run performance_tests/load_test.js

  deploy-staging:
    needs: [integration-test, performance-test]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/staging'

    steps:
    - name: Deploy to staging
      run: |
        echo "Deploying to staging environment"
        # TODO: Actual deployment steps will be added later